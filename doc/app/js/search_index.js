var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","search","searchescontroller","searcheshelper","user","weatherparser","calculate_data()","create()","destroy()","generate_user_id()","get_weather()","index()","init_user()","new()","searches()","weather_icon_url()","xml_openweather()","xml_previmeteo()","xml_worldweatheronline()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","search","searchescontroller","searcheshelper","user","weatherparser","search#calculate_data()","searchescontroller#create()","searchescontroller#destroy()","user::generate_user_id()","search#get_weather()","searchescontroller#index()","applicationcontroller#init_user()","user::new()","user#searches()","searcheshelper#weather_icon_url()","weatherparser#xml_openweather()","weatherparser#xml_previmeteo()","weatherparser#xml_worldweatheronline()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Search","","Search.html","",""],["SearchesController","","SearchesController.html","",""],["SearchesHelper","","SearchesHelper.html","",""],["User","","User.html","",""],["WeatherParser","","WeatherParser.html","","<p>Contains weather parsers from different sources\n"],["calculate_data","Search","Search.html#method-i-calculate_data","(weather_data)","<p>Counts an average weather data from given results\n"],["create","SearchesController","SearchesController.html#method-i-create","()","<p>Search action. Finds weather in an entered city\n"],["destroy","SearchesController","SearchesController.html#method-i-destroy","()","<p>Delete one of the previous search results\n"],["generate_user_id","User","User.html#method-c-generate_user_id","()","<p>Generates random number which will be used as user id\n"],["get_weather","Search","Search.html#method-i-get_weather","(city)","<p>Sets &#39;min_temp&#39;, &#39;max_temp&#39; and &#39;weather&#39; values\nfor a record\n"],["index","SearchesController","SearchesController.html#method-i-index","()","<p>Home page. Provides a new search and a list of previous searches\n"],["init_user","ApplicationController","ApplicationController.html#method-i-init_user","()","<p>Generates user identifier for searches Or creates current user from\nexisting cookie\n"],["new","User","User.html#method-c-new","(id)",""],["searches","User","User.html#method-i-searches","()","<p>Returns searches for current user\n"],["weather_icon_url","SearchesHelper","SearchesHelper.html#method-i-weather_icon_url","(search)",""],["xml_openweather","WeatherParser","WeatherParser.html#method-i-xml_openweather","(city)","<p>Returns xml responce from api.openweathermap.org\n"],["xml_previmeteo","WeatherParser","WeatherParser.html#method-i-xml_previmeteo","(city)","<p>Returns xml from api.previmeteo.com  using registered api key -\nbd04def7aed993fc06d1c52870c701ec\n"],["xml_worldweatheronline","WeatherParser","WeatherParser.html#method-i-xml_worldweatheronline","(city)","<p>Returns xml responce from api.worldweatheronline.com/ using registered api\nkey - x7jbzzerewujvnazmk7kkpyc …\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}